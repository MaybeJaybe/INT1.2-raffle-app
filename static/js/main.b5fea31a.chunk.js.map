{"version":3,"sources":["components/Header.js","components/RaffleList.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","RaffleList","props","state","nameList","selectedName","name","addName","bind","removeName","this","setState","index","splice","type","value","onChange","e","target","onClick","n","length","Math","floor","random","map","i","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAUeA,MAPf,WACI,OACI,qBAAKC,UAAU,SAAf,SACI,6C,oDC8CGC,E,kDA5CX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAAEC,SAAU,GAAIC,aAAc,KAAMC,KAAM,IACvD,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAJH,E,sDAQQ,KAApBE,KAAKP,MAAMG,MACVI,KAAKC,SAAS,CAAEP,SAAS,GAAD,mBAAMM,KAAKP,MAAMC,UAAjB,CAA2BM,KAAKP,MAAMG,OAAOA,KAAM,O,iCAIxEM,GACPF,KAAKP,MAAMC,SAASS,OAAOD,EAAO,GAClCF,KAAKC,SAAS,CAAEP,SAAS,YAAKM,KAAKP,MAAMC,c,+BAGnC,IAAD,OACL,OACI,sBAAKJ,UAAU,OAAf,UACI,sBAAKA,UAAU,UAAf,UACI,uBAAOA,UAAU,UAAUc,KAAK,OAAOC,MAAOL,KAAKP,MAAMG,KAAMU,SAAU,SAACC,GACtE,EAAKN,SAAS,CAACL,KAAMW,EAAEC,OAAOH,WAE9B,wBAAQf,UAAU,YAAYmB,QAAS,kBAAM,EAAKZ,WAAlD,kBAGR,wBAAQP,UAAU,eAAemB,QAAS,WAjC1D,IAAgBC,EAkCI,EAAKT,SAAS,CAACN,cAlCnBe,EAkCwC,EAAKjB,MAAMC,SAASiB,OAjCjEC,KAAKC,MAAMD,KAAKE,SAAWJ,OAgCtB,oBAICV,KAAKP,MAAMC,SAASqB,KAAI,SAACnB,EAAMoB,GAAP,OAAc,sBAAK1B,UAAU,OAAf,UAAsB,mBAAGA,UAAU,WAAb,SAA0BM,IACnF,wBAAQN,UAAU,eAAemB,QAAS,kBAAM,EAAKV,WAAWiB,IAAhE,0BAGJ,sBAAK1B,UAAU,SAAf,oBAEyB,OAA5BU,KAAKP,MAAME,cAAyB,oBAAIL,UAAU,gBAAd,SAA+BU,KAAKP,MAAMC,SAASM,KAAKP,MAAME,0B,GAxCtFsB,IAAMC,W,MCQhBC,MATf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGS8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b5fea31a.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.css'\n\nfunction Header() {\n    return (\n        <div className='Header'>\n            <h1>raffl.it</h1>\n        </div>\n    )\n}\nexport default Header","import React from 'react'\nimport './RaffleList.css'\n\nfunction random(n) {\n    return Math.floor(Math.random() * n)\n}\nclass RaffleList extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { nameList: [], selectedName: null, name: ''}\n        this.addName = this.addName.bind(this)\n        this.removeName = this.removeName.bind(this)\n    }\n\n    addName() {\n        if(this.state.name !== '') {\n            this.setState({ nameList: [...this.state.nameList, this.state.name], name: ''});\n        }\n\n    }\n    removeName(index) {\n        this.state.nameList.splice(index, 1)\n        this.setState({ nameList: [...this.state.nameList]})\n    }\n\n    render() {\n        return (\n            <div className='Form'>\n                <div className='AddForm'>\n                    <input className='AddName' type='text' value={this.state.name} onChange={(e) => {\n                        this.setState({name: e.target.value})\n                        }}/>\n                        <button className='AddButton' onClick={() => this.addName()}>&#x2b;</button>\n                </div>\n\n                <button className='RaffleButton' onClick={() => {\n                    this.setState({selectedName: random(this.state.nameList.length)})\n                }}>Raffle</button>\n                \n                {this.state.nameList.map((name, i) => (<div className='List'><p className='NameList' >{name}</p>\n                    <button className='RemoveButton' onClick={() => this.removeName(i)}>&#x2212;</button>\n                </div>))}\n\n                <div className='Result' >\n                    Winner:\n            {this.state.selectedName !== null && <h2 className='DisplayWinner'>{this.state.nameList[this.state.selectedName]}</h2>}\n                </div>\n          </div>\n        )\n    }\n}\nexport default RaffleList","import React from 'react';\nimport Header from './Header';\nimport RaffleList from './RaffleList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <RaffleList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}